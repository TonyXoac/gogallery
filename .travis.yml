language: go

# Whenever the Go version is updated here, .circleci/config.yml and .promu.yml
# should also be updated.
go:
- 1.11.x

go_import_path: github.com/robrotheram/gogallery

sudo: false

install:
  - go get -u github.com/golang/dep/cmd/dep
    && dep ensure -vendor-only -v

before_deploy:
  - PLATFORMS=(linux/386 linux/amd64 linux/arm)

  # build binary for all archs
  - |
    for PLATFORM in "${PLATFORMS[@]}"; do
      echo "Building $PLATFORM"
      GOOS=${PLATFORM%/*}
      GOARCH=${PLATFORM#*/}
      if [ "$GOOS" = "windows" ]; then
        build_cmd="GOOS=$GOOS GOARCH=$GOARCH go build -o gogallery -ldflags '-w -s'"
      else
        build_cmd="CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -o gogallery -ldflags '-d -w -s'"
      fi
      if ! eval $build_cmd; then
        echo "Failed building gogallery for $PLATFORM" && return 1
      fi
      if [ "$GOOS" = "windows" ]; then
        zip gogallery-${GOOS}-${GOARCH}.zip gogallery
      else
        tar cvzf gogallery-${GOOS}-${GOARCH}.tgz gogallery config.yml themes
      fi
    done
  - ls

deploy:
  provider: releases
  api_key: $AUTH_TOKEN
  file:
    - "gogallery-darwin-386.tgz"
    - "gogallery-darwin-amd64.tgz"

    - "gogallery-freebsd-386.tgz"
    - "gogallery-freebsd-arm.tgz"
    - "gogallery-freebsd-amd64.tgz"

    - "gogallery-linux-386.tgz"
    - "gogallery-linux-arm.tgz"
    - "gogallery-linux-amd64.tgz"

    - "gogallery-windows-386.zip"
    - "gogallery-windows-amd64.zip"

  skip_cleanup: true
  on:
    tags: true